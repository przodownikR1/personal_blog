apply plugin: "groovy"
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'findbugs'
apply plugin: 'project-report'
apply plugin: 'pmd'
apply plugin: 'scala'
apply plugin: 'application'
apply plugin: 'build-dashboard'
apply plugin: 'codenarc'
apply plugin: 'sonar'
displayName = "mainBlogModule"
description = "Main blog module"
applicationDefaultJvmArgs = ["-Dfile.encoding=UTF=8"]
libsDirName = './target'

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
   mavenLocal()
   mavenCentral()
}

allprojects {
	ext.baseVersion = "1.0.0"
	ext.snapshotVersion = true
	
	group = "pl.java.przodownik"
	version = "$baseVersion" + (snapshotVersion ? "-SNAPSHOT" : "")
  }
  
  subprojects {
	apply plugin: 'java'
  }
dependencies {
     def slf4jVersion = "1.7.5"
     def junitVersion = "4.11"
     def hamcrestVersion = "1.3"
     def mockitoVersion  = "1.9.5"
     def festAssertVersion = "1.4"
     def logbackVersion = "1.0.13"
     def mysqlVersion = "5.1.27"  
	 def hsqldbVersion = "2.3.1" 
	 
	
    compile("org.slf4j:slf4j-api:$slf4jVersion")
    compile("org.slf4j:slf4j-ext:$slf4jVersion")
    compile("ch.qos.logback:logback-classic:$logbackVersion")
    compile("ch.qos.logback:logback-core:$logbackVersion")
	runtime("mysql:mysql-connector-java:$mysqlVersion")
	runtime("org.hsqldb:hsqldb:$hsqldbVersion")
	
    testCompile("org.hamcrest:hamcrest-all:$hamcrestVersion")
    testCompile("org.mockito:mockito-all:$mockitoVersion")   
    testCompile("junit:junit:$junitVersion")
}


sourceSets {
    intTest
    main {
        java {
            srcDir 'src/main/java'
        }
        scala {
            srcDir 'src/main/scala'
        }
       groovy {
            srcDir 'src/main/groovy'
        }

        resources {
            srcDir 'src/main/resources'
        }

    }
    test {
        java {
            srcDir 'src/test/java'
        }
        scala {
            srcDir 'src/test/scala'
        }
       groovy {
            srcDir 'src/test/groovy'
        }

        resources {
            srcDir 'src/test/resources'
        }

    }
}


subprojects {
	sonar {
		project {
			sourceEncoding = "UTF-8"
		}
	}
}

sonar {
	server {
		url = "http://localhost:9000"
	}
	database {
		url = "jdbc:mysql://localhost:3306/sonar"
		driverClassName = "com.mysql.jdbc.Driver"
		username = "sonar"
		password = "sonar"
	}
}

task listJars << {
	configurations.compile.each { File file -> println file.name }
}

task printProps << {
	description 'Show application properties.' 
	//println application.name
	//println application.version
	//println application.env
	println System.properties['system']
}

findbugsMain.reports {
    xml.enabled false
    html.enabled true
}

findbugsTest{
    enabled = false
}

findbugsTest.reports {
    xml.enabled false
    html.enabled true
}
