apply plugin: "groovy"
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'findbugs'
apply plugin: 'project-report'
apply plugin: 'pmd'
apply plugin: 'scala'
apply plugin: 'application'
apply plugin: 'build-dashboard'
apply plugin: 'codenarc'
apply plugin: 'sonar'
apply from: './properties.gradle'
displayName = "mainBlogModule"
description = "Main blog module"
applicationDefaultJvmArgs = ["-Dfile.encoding=UTF=8"]
libsDirName = './target'


sourceCompatibility = 1.7
targetCompatibility = 1.7


repositories {
    mavenCentral()
    mavenLocal()
    maven { url "http://repo.spring.io/libs-release-local/"}
    maven { url "http://repo.spring.io/libs-milestone" }
}

allprojects {
	ext.baseVersion = "1.0.0"
	ext.snapshotVersion = true	
	group = "pl.java.przodownik"
	version = "$baseVersion" + (snapshotVersion ? "-SNAPSHOT" : "")
  }
  
  subprojects {
	apply plugin: 'java'
        sonar {
		project {
			sourceEncoding = "UTF-8"
		}
	}
  }





dependencies {
     compile ("org.codehaus.groovy:groovy:2.2.1")
     compile ("org.springframework:spring-core:${springVersion}")
     compile ("org.springframework:spring-beans:${springVersion}")
     compile ("org.springframework:spring-context:${springVersion}")
     compile ("org.springframework:spring-orm:${springVersion}")
     compile ("org.springframework:spring-tx:${springVersion}")
     compile ("org.springframework.data:spring-data-jpa:1.4.4.RELEASE")   
     compile ("javax.validation:validation-api:1.1.0.Final")
     compile ("org.hibernate:hibernate-validator:5.0.3.Final")
     compile ("org.hibernate:hibernate-core:${hibernateVersion}")
     compile ("org.hibernate:hibernate-entitymanager:${hibernateVersion}")
     compile("joda-time:joda-time:2.3")
     compile("org.codehaus.jackson:jackson-mapper-asl:1.9.13")
     compile("org.codehaus.jackson:jackson-core-asl:1.9.13")
     //compiler("joda-time:joda-time-hibernate:1.3")
     compile("org.projectlombok:lombok:1.12.4")
     compile("com.google.guava:guava:16.0.1") 
     compile("org.easytesting:fest-assert:1.4")
     compile("com.jolbox:bonecp:0.7.1.RELEASE")
     compile("com.jolbox:bonecp-spring:0.7.1.RELEASE")
     compile("com.jolbox:bonecp-provider:0.7.1.RELEASE")
     compile("org.hsqldb:hsqldb:2.3.1")
     compile("org.aspectj:aspectjrt:1.7.4")
     compile("org.aspectj:aspectjweaver:1.7.4")
     compile("com.googlecode.catch-exception:catch-exception:1.2.0")
     compile("org.slf4j:slf4j-api:$slf4jVersion")
     compile("org.slf4j:slf4j-ext:$slf4jVersion")
     compile("ch.qos.logback:logback-classic:$logbackVersion")
     compile("ch.qos.logback:logback-core:$logbackVersion")
     testCompile("org.hamcrest:hamcrest-all:$hamcrestVersion")
     testCompile("org.mockito:mockito-all:$mockitoVersion")
     testCompile("junit:junit:$junitVersion") 

     compile("org.apache.cxf:cxf-rt-frontend-jaxws:${cxfVersion}")
     compile("org.apache.cxf:cxf-rt-transports-http:${cxfVersion}")
     compile("org.apache.cxf:cxf-rt-ws-security:${cxfVersion}")
     compile("org.apache.cxf:cxf-rt-ws-policy:${cxfVersion}")

     compile("org.apache.camel:camel-core:$camelVersion")
     compile("org.apache.camel:camel-test:$camelVersion")
     compile("org.apache.camel:camel-cxf:$camelVersion")
     compile("org.apache.camel:camel-jaxb:camelVersion")
     compile("org.apache.camel:camel-spring:$camelVersion")
     compile("org.apache.camel:camel-jaxb:$camelVersion")

}
sourceSets {
    intTest
    main {
        java {
            srcDir 'src/main/java'
        }
        scala {
            srcDir 'src/main/scala'
        }
       groovy {
            srcDir 'src/main/groovy'
        }

        resources {
            srcDir 'src/main/resources'
        }

    }
    test {
        java {
            srcDir 'src/test/java'
        }
        scala {
            srcDir 'src/test/scala'
        }
       groovy {
            srcDir 'src/test/groovy'
        }

        resources {
            srcDir 'src/test/resources'
        }

    }
}


sonar {
	server {
		url = "http://localhost:9000"
	}
	database {
		url = "jdbc:mysql://localhost:3306/sonar"
		driverClassName = "com.mysql.jdbc.Driver"
		username = "sonar"
		password = "sonar"
	}
}

task listJars << {
	configurations.compile.each { File file -> println file.name }
}

task showProperties {
	description 'Show application properties.'
	doLast {		
	   println "Version: $applicationVersion"
	   println "Application name: $applicationName"
	   println "Application enviroment: $applicationEnv"
	 }
}

findbugsMain.reports {
    xml.enabled false
    html.enabled true
}

findbugsTest{
    enabled = false
}

findbugsTest.reports {
    xml.enabled false
    html.enabled true
}
